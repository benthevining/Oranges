/*
This file was generated by CMake, any changes will be overwritten!

Generated by the @CMAKE_CURRENT_FUNCTION@ function, Oranges version @Oranges_VERSION@
*/

#pragma once
#include <cassert>

/*-----------------------------------------------------------------------------------------------------------------------*/

// OS type macros

#define @ORANGES_ARG_BASE_NAME@_UNIX @ORANGES_UNIX@
#define @ORANGES_ARG_BASE_NAME@_POSIX @ORANGES_POSIX@

#define @ORANGES_ARG_BASE_NAME@_WINDOWS @ORANGES_WIN@
#define @ORANGES_ARG_BASE_NAME@_MINGW @ORANGES_MINGW@

#define @ORANGES_ARG_BASE_NAME@_LINUX @ORANGES_LINUX@

#define @ORANGES_ARG_BASE_NAME@_APPLE @ORANGES_APPLE@
#define @ORANGES_ARG_BASE_NAME@_OSX @ORANGES_MACOSX@
#define @ORANGES_ARG_BASE_NAME@_IOS @ORANGES_IOS@

#define @ORANGES_ARG_BASE_NAME@_ANDROID @ORANGES_ANDROID@

#define @ORANGES_ARG_BASE_NAME@_OS_TYPE "@ORANGES_OS_TYPE@"

/*-----------------------------------------------------------------------------------------------------------------------*/

// compiler type macros

#define @ORANGES_ARG_BASE_NAME@_CLANG @ORANGES_CLANG@

#define @ORANGES_ARG_BASE_NAME@_GCC @ORANGES_GCC@

#define @ORANGES_ARG_BASE_NAME@_MSVC @ORANGES_MSVC@

#define @ORANGES_ARG_BASE_NAME@_INTEL_COMPILER @ORANGES_INTEL_COMPILER@

#define @ORANGES_ARG_BASE_NAME@_COMPILER_TYPE "@ORANGES_COMPILER_TYPE@"

/*-----------------------------------------------------------------------------------------------------------------------*/

// processor type macros

#define @ORANGES_ARG_BASE_NAME@_ARM @ORANGES_ARM@
#define @ORANGES_ARG_BASE_NAME@_INTEL @ORANGES_INTEL@
#define @ORANGES_ARG_BASE_NAME@_CPU_TYPE "@ORANGES_CPU_TYPE@"

#define @ORANGES_ARG_BASE_NAME@_64BIT @ORANGES_64BIT@
#define @ORANGES_ARG_BASE_NAME@_32BIT @ORANGES_32BIT@

#define @ORANGES_ARG_BASE_NAME@_BIG_ENDIAN @ORANGES_BIG_ENDIAN@
#define @ORANGES_ARG_BASE_NAME@_LITTLE_ENDIAN @ORANGES_LITTLE_ENDIAN@

/*-----------------------------------------------------------------------------------------------------------------------*/

// SIMD instruction capabilities

#define @ORANGES_ARG_BASE_NAME@_ARM_NEON @ORANGES_ARM_NEON@ 0

#define @ORANGES_ARG_BASE_NAME@_AVX @ORANGES_AVX@ 0
#define @ORANGES_ARG_BASE_NAME@_AVX512 @ORANGES_AVX512@ 0

#define @ORANGES_ARG_BASE_NAME@_SSE @ORANGES_SSE@ 0

/*-----------------------------------------------------------------------------------------------------------------------*/

// force-inline macro
#define @ORANGES_ARG_BASE_NAME@_FORCE_INLINE @ORANGES_FORCE_INLINE@

// never inline macro
#define @ORANGES_ARG_BASE_NAME@_NEVER_INLINE @ORANGES_NEVER_INLINE@

// pure function macro
#define @ORANGES_ARG_BASE_NAME@_PURE_FUNCTION @ORANGES_PURE_FUNCTION@

// pointer anti-aliasing macro
#define @ORANGES_ARG_BASE_NAME@_RESTRICT @ORANGES_RESTRICT@

/*-----------------------------------------------------------------------------------------------------------------------*/

// assertion macros

#define @ORANGES_ARG_BASE_NAME@_ASSERT_FALSE do { assert(false); } while (false)

#define @ORANGES_ARG_BASE_NAME@_ASSERT(condition) do { if (! (condition)) @ORANGES_ARG_BASE_NAME@_ASSERT_FALSE; } while (false)

/*-----------------------------------------------------------------------------------------------------------------------*/
